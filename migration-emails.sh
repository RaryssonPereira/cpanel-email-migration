#!/bin/bash

# === SCRIPT: migration-emails.sh ===
# Este script migra todas as mensagens da Caixa de Entrada e Enviados das contas de e-mail de um cPanel para outro.
# Ele verifica se est√° rodando dentro de uma sess√£o segura com Byobu, coleta dados da conta de origem e prepara o caminho para migra√ß√£o.

# === PARTE 1: Verifica√ß√£o do Byobu ===
echo -e "\nüîç Verificando se o script est√° sendo executado dentro do Byobu..."

# Verifica se a vari√°vel de ambiente $BYOBU_BACKEND est√° definida, indicando que estamos dentro do Byobu.
if [ -n "$BYOBU_BACKEND" ]; then
    echo "‚úÖ O script est√° sendo executado dentro de uma sess√£o do Byobu. Continuando normalmente..."
else
    echo -e "‚ö†Ô∏è  O script **n√£o est√° sendo executado dentro do Byobu**."
    echo -e "‚ÑπÔ∏è  Recomendamos fortemente o uso do Byobu para evitar a perda de conex√£o durante a migra√ß√£o de e-mails."

    # Pergunta se o usu√°rio deseja entrar no Byobu.
    read -rp $'\n‚ùì Deseja entrar no Byobu antes de continuar? (s/n): ' RESPOSTA

    # Se o usu√°rio responder "s" ou "S", inicia o processo de instala√ß√£o ou orienta√ß√£o para uso do Byobu.
    if [[ "$RESPOSTA" =~ ^[sS]$ ]]; then
        echo -e "\nüì¶ Verificando se o Byobu est√° instalado..."

        # Carrega informa√ß√µes da distribui√ß√£o do sistema operacional.
        source /etc/os-release

        # Verifica se o comando "byobu" existe.
        if ! command -v byobu &>/dev/null; then
            echo -e "üîß Instalando o Byobu..."

            # Para distribui√ß√µes baseadas em RHEL/CentOS/AlmaLinux.
            if [[ "$ID" =~ ^(centos|rhel|almalinux)$ ]]; then
                yum install -y epel-release byobu

            # Para distribui√ß√µes baseadas em Debian/Ubuntu.
            elif [[ "$ID" =~ ^(ubuntu|debian)$ ]]; then
                apt update && apt install -y byobu

            # Se n√£o for poss√≠vel identificar a distribui√ß√£o.
            else
                echo "‚ùå Distribui√ß√£o '$ID' n√£o reconhecida para instala√ß√£o autom√°tica do Byobu."
                exit 1
            fi

            echo "‚úÖ Byobu instalado com sucesso."
        else
            echo "‚úÖ Byobu j√° est√° instalado."
        fi

        # Informa o usu√°rio como entrar no Byobu e executar o script novamente.
        SCRIPT_NAME=$(basename "$0")
        echo -e "\nüö™ Agora voc√™ pode entrar no Byobu com o comando:\n"
        echo -e "   üëâ  byobu\n"
        echo -e "üîÅ Depois disso, execute novamente este script com:\n"
        echo -e "   üëâ  ./$SCRIPT_NAME\n"
        echo -e "üí° Isso garante que, mesmo em caso de desconex√£o, a migra√ß√£o continue normalmente."
        exit 0
    else
        echo -e "\n‚ö†Ô∏è  Continuando a execu√ß√£o fora do Byobu conforme sua escolha."
    fi
fi

# === PARTE 2: Coleta de informa√ß√µes ===
echo -e "\nüßæ Vamos coletar as informa√ß√µes da conta de e-mail que ser√° migrada."

# Lista os diret√≥rios em /home para sugerir usu√°rios dispon√≠veis.
echo -e "\nüìÅ Usu√°rios dispon√≠veis no diret√≥rio /home:"
if ls /home &>/dev/null; then
    ls /home
else
    echo "‚ö†Ô∏è  N√£o foi poss√≠vel listar os diret√≥rios em /home (permiss√£o negada ou diret√≥rio ausente)."
fi

# Solicita ao operador o nome do usu√°rio do cPanel.
read -rp $'\nüë§ Qual o USU√ÅRIO do cPanel (ex: aguardiacom)? ' USUARIO_EMAIL

# Verifica se o diret√≥rio do usu√°rio existe, caso contr√°rio interrompe.
if [ ! -d "/home/$USUARIO_EMAIL" ]; then
    echo -e "‚ùå O diret√≥rio /home/$USUARIO_EMAIL n√£o existe. Verifique o nome e tente novamente."
    exit 1
fi

# Lista os dom√≠nios existentes no diret√≥rio de e-mail desse usu√°rio.
echo -e "\nüì¨ Dom√≠nios encontrados em /home/$USUARIO_EMAIL/mail:"
if ls "/home/$USUARIO_EMAIL/mail" &>/dev/null; then
    ls "/home/$USUARIO_EMAIL/mail"
else
    echo "‚ö†Ô∏è  N√£o foi poss√≠vel listar os dom√≠nios (talvez o diret√≥rio n√£o exista ou esteja vazio)."
fi

# Solicita ao operador o nome do dom√≠nio cujas contas ser√£o migradas.
read -rp $'\nüåê Qual o dom√≠nio que deseja migrar (ex: aguardidanoticia.com.br)? ' DOMINIO_EMAIL

# Define os caminhos poss√≠veis para os arquivos de e-mail:
# - Se o script for rodado como root (WHM), usa o caminho completo.
# - Se for rodado dentro do terminal do cPanel do usu√°rio, usa caminho relativo.
CAMINHO_WHM="/home/$USUARIO_EMAIL/mail/$DOMINIO_EMAIL"
CAMINHO_CPANEL="mail/$DOMINIO_EMAIL"

# Verifica se o script est√° sendo executado por root (EUID 0 = root).
if [ "$EUID" -eq 0 ]; then
    CAMINHO_FINAL="$CAMINHO_WHM"
else
    CAMINHO_FINAL="$CAMINHO_CPANEL"
fi

# Verifica se o diret√≥rio final com as contas de e-mail existe.
if [ ! -d "$CAMINHO_FINAL" ]; then
    echo -e "\n‚ùå O diret√≥rio de e-mails '$CAMINHO_FINAL' n√£o foi encontrado."
    echo "üîé Verifique se o usu√°rio e o dom√≠nio est√£o corretos, ou se voc√™ est√° no ambiente certo (root ou cPanel)."
    exit 1
fi

# Mostra um resumo dos dados coletados antes de seguir.
echo -e "\nüìÇ Diret√≥rio de origem identificado:"
echo "   ‚úÖ Usu√°rio  : $USUARIO_EMAIL"
echo "   ‚úÖ Dom√≠nio  : $DOMINIO_EMAIL"
echo "   üìå Caminho  : $CAMINHO_FINAL"

# Aguarda confirma√ß√£o do operador antes de prosseguir com a migra√ß√£o.
read -rp $'\nüîÅ Pressione [Enter] para continuar com a migra√ß√£o ou CTRL+C para cancelar...'

# === PARTE 3: Sele√ß√£o de contas de e-mail a migrar ===
echo -e "\nüì• Listando todas as contas de e-mail encontradas no dom√≠nio '$DOMINIO_EMAIL'..."

# Lista todos os diret√≥rios dentro do dom√≠nio (essas s√£o as contas de e-mail).
if ! CONTAS_TODAS=($(ls -1 "$CAMINHO_FINAL")); then
    echo "‚ùå Erro ao listar contas dentro de '$CAMINHO_FINAL'. Verifique permiss√µes ou exist√™ncia do diret√≥rio."
    exit 1
fi

# Mostra as contas dispon√≠veis.
echo -e "\nüìß Contas encontradas:"
for conta in "${CONTAS_TODAS[@]}"; do
    echo "   - $conta"
done

# Pergunta quais contas devem ser ignoradas, se houver.
read -rp $'\nüõë Deseja ignorar alguma conta da migra√ß√£o? Digite os nomes separados por espa√ßo (ou pressione Enter para migrar todas): ' IGNORADAS_INPUT

# Converte a entrada do usu√°rio em array, separando por espa√ßos.
IFS=' ' read -r -a CONTAS_IGNORADAS <<<"$IGNORADAS_INPUT"

# Compara todas as contas dispon√≠veis com as ignoradas para filtrar apenas as que ser√£o migradas.
CONTAS_MIGRAR=()
for conta in "${CONTAS_TODAS[@]}"; do
    IGNORAR=false
    for ignorada in "${CONTAS_IGNORADAS[@]}"; do
        if [[ "$conta" == "$ignorada" ]]; then
            IGNORAR=true
            break
        fi
    done

    # Adiciona √† lista de migra√ß√£o apenas se n√£o estiver na lista de ignoradas.
    if [ "$IGNORAR" = false ]; then
        CONTAS_MIGRAR+=("$conta")
    fi
done

# Exibe as contas finais que ser√£o migradas.
echo -e "\n‚úÖ Contas que ser√£o migradas:"
for conta in "${CONTAS_MIGRAR[@]}"; do
    echo "   üì§ $conta"
done

# Confirma com o operador antes de seguir para a pr√≥xima parte.
read -rp $'\nüîÅ Pressione [Enter] para iniciar a migra√ß√£o das contas acima ou CTRL+C para cancelar...'
